{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dougl\\\\OneDrive\\\\Documentos\\\\reactJogoMemoria\\\\react-jogo\\\\src\\\\MemoryGame.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport GameBoard from './components/GameBoard';\nimport GameOver from './components/GameOver';\nimport game from './game/game';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MemoryGame() {\n  _s();\n\n  const [gameOver, setGameOver] = useState(false);\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    setCards(game.createCardsFromTechs());\n  }, []);\n\n  function restart() {\n    game.clearCards();\n    setCards(game.cr);\n    setGameOver(false);\n  }\n\n  function handleFlip(card) {\n    if (game.setCard(card.id)) {\n      if (game.secondCard) {\n        if (game.checkMatch()) {\n          game.clearCards();\n\n          if (game.checkGameOver()) {\n            //Game Over\n            setGameOver(true);\n          }\n        } else {\n          setTimeout(() => {\n            // no match\n            game.unflipCards();\n            setCards([...game.cards]);\n          }, 1000);\n        }\n\n        ;\n      }\n    }\n\n    setCards([...game.cards]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GameBoard, {\n      handleFlip: handleFlip,\n      cards: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameOver, {\n      show: gameOver,\n      handleRestart: restart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MemoryGame, \"ysfJwdU3m+nTpEvdczw0zQKbZM4=\");\n\n_c = MemoryGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoryGame\");","map":{"version":3,"sources":["C:/Users/dougl/OneDrive/Documentos/reactJogoMemoria/react-jogo/src/MemoryGame.js"],"names":["React","useEffect","useState","GameBoard","GameOver","game","MemoryGame","gameOver","setGameOver","cards","setCards","createCardsFromTechs","restart","clearCards","cr","handleFlip","card","setCard","id","secondCard","checkMatch","checkGameOver","setTimeout","unflipCards"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAGA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAEhC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,QAAQ,CAACL,IAAI,CAACM,oBAAL,EAAD,CAAR;AACH,GAFQ,EAEP,EAFO,CAAT;;AAIA,WAASC,OAAT,GAAkB;AACdP,IAAAA,IAAI,CAACQ,UAAL;AACAH,IAAAA,QAAQ,CAACL,IAAI,CAACS,EAAN,CAAR;AACAN,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAED,WAASO,UAAT,CAAoBC,IAApB,EAAyB;AACrB,QAAIX,IAAI,CAACY,OAAL,CAAaD,IAAI,CAACE,EAAlB,CAAJ,EAA2B;AACvB,UAAIb,IAAI,CAACc,UAAT,EAAqB;AACjB,YAAId,IAAI,CAACe,UAAL,EAAJ,EAAuB;AACnBf,UAAAA,IAAI,CAACQ,UAAL;;AACA,cAAIR,IAAI,CAACgB,aAAL,EAAJ,EAA0B;AACtB;AACAb,YAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ,SAND,MAMO;AACHc,UAAAA,UAAU,CAAC,MAAM;AACb;AACAjB,YAAAA,IAAI,CAACkB,WAAL;AACAb,YAAAA,QAAQ,CAAC,CAAC,GAAGL,IAAI,CAACI,KAAT,CAAD,CAAR;AACH,WAJS,EAIP,IAJO,CAAV;AAMH;;AAAA;AACJ;AACJ;;AACDC,IAAAA,QAAQ,CAAC,CAAC,GAAGL,IAAI,CAACI,KAAT,CAAD,CAAR;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEM,UAAvB;AAAmC,MAAA,KAAK,EAAEN;AAA1C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,QAAhB;AAA0B,MAAA,aAAa,EAAEK;AAAzC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA5CuBN,U;;KAAAA,U","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport GameBoard from './components/GameBoard'\r\nimport GameOver from './components/GameOver'\r\nimport game from './game/game'\r\n\r\n\r\nexport default function MemoryGame(){\r\n\r\n    const [gameOver, setGameOver] = useState(false)\r\n    const [cards, setCards] = useState([])\r\n\r\n    useEffect(()=>{\r\n        setCards(game.createCardsFromTechs())\r\n    },[])\r\n\r\n    function restart(){\r\n        game.clearCards()\r\n        setCards(game.cr)\r\n        setGameOver(false)\r\n    }\r\n\r\n    function handleFlip(card){\r\n        if (game.setCard(card.id)) {\r\n            if (game.secondCard) {\r\n                if (game.checkMatch()) {\r\n                    game.clearCards();\r\n                    if (game.checkGameOver()) {\r\n                        //Game Over\r\n                        setGameOver(true)\r\n                    }\r\n                } else {\r\n                    setTimeout(() => {\r\n                        // no match\r\n                        game.unflipCards()\r\n                        setCards([...game.cards])\r\n                    }, 1000);\r\n    \r\n                };\r\n            }\r\n        }\r\n        setCards([...game.cards])\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <GameBoard handleFlip={handleFlip} cards={cards}></GameBoard>\r\n            <GameOver show={gameOver} handleRestart={restart}></GameOver>\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}